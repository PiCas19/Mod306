package Frame;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Area;
import java.io.Writer;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.batik.svggen.SVGGraphics2DIOException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;

/**
 * La classe LivePanel Ã¨ dove viene fatta generato il fiocco di neve.
 * @author pierpaolo Casati
 * @version 10.04.2019
 */
public class LivePanel extends javax.swing.JPanel {
    
    /**
     * Area SnowflakeTriangle.
     */
    private Area triangle = null;
    
    /**
     * Coordinata x di riferimento.
     */
    private int x = 0;
    
    /**
     * Coordinata y di riferimento.
     */
    private int y = 0;
    
    /**
     * Colore sfondo.
     */
    private Color backgroundColor = new Color(83,81,81);
    
    /**
     * Colore fiocco di neve.
     */
    private Color colorFlake = Color.WHITE;
    
    
    /**
     * Setter dell'area dello SnowflakeTriangle.
     * @param triangle Area dello SnowflakeTriangle
     */
    public void setTriangle(Area triangle){
        this.triangle = triangle;
    }
    
    /**
     * Setter coordinate x di riferimento.
     * @param x Coordinate x di riferimento.
     */
    public void setX(int x){
        this.x = x;
    }
    
    /**
     * Setter coordinate y di riferimento.
     * @param y  Coordinate y di riferimento.
     */
    public void setY(int y){
        this.y = y;
    }
    
    
    /**
     * Setter colore fiocco di neve.
     * @param flake Colore fiocco di neve.
     */
    public void setColorFlake(Color flake){
        this.colorFlake = flake;
    }

    /**
     * Creates new form LivePanel
     */
    public LivePanel() {
        initComponents();
      
    }
    
    /**
     * Permette di disgnare sul panel la gfenerazioe del fiocco.
     * @param g Contesto grafico.
     */
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.setColor(this.backgroundColor);
        g.fillRect(0, 0, this.getWidth() * 2, this.getHeight() * 2);
        Graphics2D g2 = (Graphics2D) g;
        g2.setColor(this.colorFlake);
        for(int i = 0; i < 6; i++){
            AffineTransform tr2 = new AffineTransform();
            tr2.scale(0.15, 0.15);
            tr2.translate(this.x/2, this.getHeight());
            tr2.rotate(Math.toRadians(60) * i, this.x, this.y);
            g2.setTransform(tr2);
            g2.fill(triangle);
        }
        
        for(int i = 0; i < 6; i++){
            AffineTransform tr2 = new AffineTransform();
            tr2.scale(-0.15, 0.15);
            tr2.translate((-this.x * 2) - this.x/2 , this.getHeight());
            tr2.rotate(Math.toRadians(60) * i, this.x, this.y);
            g2.setTransform(tr2);
            g2.fill(triangle);
        }
       
    }
   
    /**
     * Permette di generare un immagine ssvg del fiooco di neve.
     * @param file Nome del file.
     * @throws SVGGraphics2DIOException 
     */
   public void createSVG(String file) throws SVGGraphics2DIOException{
        DOMImplementation domImpl =
        GenericDOMImplementation.getDOMImplementation();
        String svg = "http://www.w3.org/2000/svg";
        Document document = domImpl.createDocument(svg, "svg", null);
        SVGGraphics2D gSVG = new SVGGraphics2D(document);
        this.paintComponent(gSVG);
        //boolean useCSS = true;
        //Writer out;
        gSVG.stream(file + ".svg");
        
   }
   
  
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(100, 300));
        setSize(new java.awt.Dimension(100, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
